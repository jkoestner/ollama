[build-system]
requires = ["setuptools>=62.6"]
build-backend = "setuptools.build_meta"

[project]
name = "osllmh"
description = "open source llm helper"
dynamic = ["version"]
authors = [{ name = "John Koestner", email = "johnkoestner@outlook.com" }]
readme = 'README.md'
license = { file = 'LICENSE.md' }
requires-python = '>=3.8'

dependencies = [
    "colorama>=0.4.6",
    "dash-ag-grid>=31.0.1",             # only for dash
    "dash-bootstrap-components>=1.5.0", # only for dash
    "dash-extensions>=1.0.14",          # only for dash
    "docx2txt>=0.8",                    # llama file reader dependency
    "EbookLib>=0.18",                   # llama file reader dependency
    "gunicorn>=21.2.0",                 # only for dash
    "html2text>=2024.2.26",             # llama file reader dependency
    "ipython>=8.18.1",
    "llama-index>=0.11.11",
    "llama-index-readers-file>=0.2.2",  # llama file reader dependency
    "openpyxl>=3.1.5",                  # llama file reader dependency
    "pymupdf>=1.24.10",                 # llama file reader dependency
    "pdfminer.six>=20240706",           # llama file reader dependency
]

[project.optional-dependencies]
dev = [
    "black>=23.12.1",
    "isort>=5.13.2",
    "jupyterlab-code-formatter>=2.2.1",
    "jupyter-resource-usage>=1.0.1",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.11",
    "sphinx>=6.0, <7.2",
    "sphinx_rtd_theme>=1.2.2",
]

[project.scripts]
osllmh = "osllmh.utils.cli:cli" # the entry points provide console scripts at command line

[project.urls]
homepage = "https://github.com/jkoestner/osllmh"
repository = 'https://github.com/jkoestner/osllmh'

[tool.setuptools]
include-package-data = true # include files from MANIFEST.in

[tool.setuptools.packages.find]
exclude = ["tests*"]

[tool.setuptools.dynamic]
version = { attr = "osllmh.version.version" }

[tool.ruff]
line-length = 88
fix = false
unfixable = []
extend-include = ["*.ipynb"]

select = [
    # pyflakes
    "F",
    # pycodestyle
    "E",
    "W",
    # isort
    "I",
    # pydocstyle
    "D",
    # flake8-2020
    "YTT",
    # flake8-bugbear
    "B",
    # flake8-quotes
    "Q",
    # flake8-debugger
    "T10",
    # flake8-gettext
    "INT",
    # pylint
    "PL",
    # misc lints
    "PIE",
    # flake8-pyi
    "PYI",
    # tidy imports
    "TID",
    # implicit string concatenation
    "ISC",
    # type-checking imports
    "TCH",
    # comprehensions
    "C4",
    # pygrep-hooks
    "PGH",
    # Ruff-specific rules
    "RUF",
    # flake8-bandit: exec-builtin
    "S102",
    # numpy-legacy-random
    "NPY002",
    # Perflint
    "PERF",
    # flynt
    "FLY",
    # flake8-logging-format
    "G",
]

ignore = [
    ### Intentionally disabled
    # logging statement uses f-string
    "G004",
    # ignore __init__ docstring
    "D107",
    # these are conflicting errors
    "D203",
    "D212",
    # ignore == False vs is False due to pandas series
    "E712",
    "ISC001",
    # ignore magic numbers
    "PLR2004",
    # ignore too many return statements or branches
    "PLR0911",
    "PLR0912",
    "PLR0915",
]

[tool.ruff.lint]
exclude = ["*.ipynb"]
pylint.max-args = 10
